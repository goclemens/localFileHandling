(function(e,n){typeof exports==="object"&&typeof module!=="undefined"?module.exports=n():typeof define==="function"&&define.amd?define(n):e.localFileLoader=n()})(this,function(){"use strict";function e(e,n){console.log("start loading 'ascii' file - "+e);var t=new XMLHttpRequest;t.overrideMimeType("text/plain");t.open("GET",e,true);t.onreadystatechange=function(){if(t.readyState===4){if(t.status===200||t.status==0){console.log("loaded "+e);n(t.responseText)}}};t.send()}function n(n,t){e(n,function(e){t(e)})}function t(){try{var e=JSON.parse(rawFile.responseText);return e}catch(e){console.log("ERROR parseJSON - "+e);console.log("ERROR parseJSON - could not parse string, returning empty object");var n={};return n}}function o(n,o){e(n,function(e){var n=t(e);o(n)})}function r(e){var n={};var t=e.split(/\r\n|\n/);var o=t[0].split(",");o.forEach(function(e,t){o[t]=o[t].trim();n[o[t]]=[]});for(var r=1;r<t.length;r++){var i=t[r].split(",");i.forEach(function(e,t){e=e.trim();n[o[t]].push(e)})}console.log("handleCSV return");return n}function i(n,t){e(n,function(e){var n=r(e);t(n)})}var l={};l.ext={txt:"handleTXT",json:"handleJSON",csv:"handleCSV"};l.handleTXT=n;l.handleJSON=o;l.handleCSV=i;function a(e){return e.substr((~-fname.lastIndexOf(".")>>>0)+2)}function c(e){return e.split("/").pop()}function u(e,n,t){if(cfunc===undefined){var t=function(){return}}if(n===undefined){var n={}}var o=0;var r=e.length;console.log("fileLoader - "+e.length+" files in queue");for(var i=0;i<e.lenth;i++){curFileExt=a(e[i]).toLowerCase();if(l.ext[curFileExt]!==undefined){(function(){var t=c(e[i]);l[l.ext[curFileExt]](e[i],function(e){n[t]=e;u()})})()}else{console.log("localFileLoader - '"+e[i]+"' is not supported");u()}}function u(){console.log(o+" files loaded");if(o==r){console.log("localFileLoader - callback: "+t.name);t(n)}else{o++}}}return u});